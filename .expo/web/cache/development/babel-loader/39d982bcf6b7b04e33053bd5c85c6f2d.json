{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/develcode12/glow/glow-app/app/components/toolbar/toolbar.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nvar Toolbar = function (_Component) {\n  _inherits(Toolbar, _Component);\n\n  var _super = _createSuper(Toolbar);\n\n  function Toolbar() {\n    _classCallCheck(this, Toolbar);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Toolbar, [{\n    key: \"_handleLogin\",\n    value: function _handleLogin() {\n      this.setState();\n      this.props.changeTitle('Login');\n    }\n  }, {\n    key: \"_handleBack\",\n    value: function _handleBack() {\n      this.props.changeTitle('Glow');\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.props.title == \"Glow\") {\n        return React.createElement(View, {\n          style: viewStyle.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          style: titleStyle.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 11\n          }\n        }, this.props.title), React.createElement(View, {\n          style: buttonStyle.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 11\n          }\n        }, React.createElement(Button, {\n          title: \"Login\",\n          onPress: this._handleLogin.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }\n        })));\n      } else {\n        return React.createElement(View, {\n          style: viewStyle.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }\n        }, React.createElement(TouchableOpacity, {\n          style: iconStyle.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 11\n          }\n        }, React.createElement(FontAwesomeIcon, {\n          icon: faArrowLeft,\n          size: 26,\n          onPress: this._handleBack.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }\n        })), React.createElement(Text, {\n          style: titleStyle.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 11\n          }\n        }, this.props.title), React.createElement(View, {\n          style: buttonStyle.container,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 11\n          }\n        }, React.createElement(Button, {\n          title: \"Login\",\n          onPress: this._handleLogin.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }\n        })));\n      }\n    }\n  }]);\n\n  return Toolbar;\n}(Component);\n\nvar viewStyle = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n    backgroundColor: '#fff',\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 1,\n      height: 1\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 3,\n    elevation: 10\n  }\n});\nvar iconStyle = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 20\n  }\n});\nvar titleStyle = StyleSheet.create({\n  container: {\n    flex: 4,\n    fontSize: 42,\n    paddingLeft: 20,\n    borderWidth: 2\n  }\n});\nvar buttonStyle = StyleSheet.create({\n  container: {\n    flex: 2,\n    alignItems: 'center'\n  }\n});\nexport default Toolbar;","map":{"version":3,"sources":["/home/develcode12/glow/glow-app/app/components/toolbar/toolbar.js"],"names":["React","Component","FontAwesomeIcon","faArrowLeft","Toolbar","setState","props","changeTitle","title","viewStyle","container","titleStyle","buttonStyle","_handleLogin","bind","iconStyle","_handleBack","StyleSheet","create","flex","flexDirection","alignItems","backgroundColor","shadowColor","shadowOffset","width","height","shadowOpacity","shadowRadius","elevation","paddingLeft","fontSize","borderWidth"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View,Text,Button,TouchableOpacity } from 'react-native';\nimport { StyleSheet } from 'react-native';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\nimport { faArrowLeft } from '@fortawesome/free-solid-svg-icons';\n\nclass Toolbar extends Component{\n\n  _handleLogin(){\n    this.setState()\n    this.props.changeTitle('Login');\n  }\n\n  _handleBack(){\n    this.props.changeTitle('Glow');\n  }\n\n  render(){\n    if (this.props.title == \"Glow\"){\n      return (\n        <View style={viewStyle.container}>\n          <Text style={titleStyle.container}>{this.props.title}</Text>\n  \n          <View style={buttonStyle.container} >\n            <Button title=\"Login\" onPress={this._handleLogin.bind(this)}/>\n          </View>\n        </View>\n      );\n\n    }else{\n\n      return (\n        <View style={viewStyle.container}>\n          <TouchableOpacity style={iconStyle.container}>\n            <FontAwesomeIcon icon={ faArrowLeft } size={26} onPress={this._handleBack.bind(this)}/>\n          </TouchableOpacity>\n  \n          <Text style={titleStyle.container}>{this.props.title}</Text>\n  \n          <View style={buttonStyle.container} >\n            <Button title=\"Login\" onPress={this._handleLogin.bind(this)}/>\n          </View>\n        </View>\n      );\n    }\n  }\n}\n\nconst viewStyle = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    alignItems: 'center',\n\n    backgroundColor: '#fff',\n    shadowColor: '#000',\n    shadowOffset: { width: 1, height: 1 },\n    shadowOpacity:  0.4,\n    shadowRadius: 3,\n    elevation: 10,\n  },\n});\n\nconst iconStyle = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingLeft: 20,\n  }\n});\n\nconst titleStyle = StyleSheet.create({\n  container: {\n    flex: 4,\n    fontSize: 42,\n    paddingLeft: 20,\n    borderWidth:2,\n  },\n});\n\nconst buttonStyle = StyleSheet.create({\n  container: {\n    flex: 2,\n    alignItems: 'center',\n  },\n});\n\nexport default Toolbar"]},"metadata":{},"sourceType":"module"}